datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}


model Hotel {
  id                 String    @id @default(uuid()) @map("_id")
  userId             String
  title              String    // Changed from @db.Text to String
  description        String    // Changed from @db.LongText to String
  image              String
  country            String
  state              String
  city               String
  locationDesciption String    // Changed from @db.LongText to String
  gym                Boolean   @default(false)
  spa                Boolean   @default(false)
  bar                Boolean   @default(false)
  laundry            Boolean   @default(false)
  restaurant         Boolean   @default(false)
  shopping           Boolean   @default(false)
  freeParking        Boolean   @default(false)
  bikeRental         Boolean   @default(false)
  freewifi           Boolean   @default(false)
  movieNights        Boolean   @default(false)
  swimmingPool       Boolean   @default(false)
  coffeeShop         Boolean   @default(false)
  addedAt            DateTime  @default(now())
  updatedAt          DateTime  @default(now())
  rooms              Room[]
  bookings           Booking[]

}

model Room {
  id             String  @id @default(uuid()) @map("_id")
  title          String
  description    String  // Changed from @db.LongText to String
  bedCount       Int     @default(0)
  guestCount     Int     @default(0)
  bathroomCount  Int     @default(0)
  kingBed        Int     @default(0)
  queenBed       Int     @default(0)
  image          String
  breakFastPrice Int
  roomPrice      Int
  roomService    Boolean @default(false)
  TV             Boolean @default(false)
  balcony        Boolean @default(false)
  freeWifi       Boolean @default(false)
  cityView       Boolean @default(false)
  oceanView      Boolean @default(false)
  forestView     Boolean @default(false)
  mountainView   Boolean @default(false)
  airCondition   Boolean @default(false)
  soundProofed   Boolean @default(false)
  hotelId        String

  Hotel Hotel? @relation(fields: [hotelId], references: [id], onDelete: Cascade)

  Booking Booking[]

  @@index([hotelId])
}

model Booking {
  id                String   @id @default(uuid()) @map("_id")
  userName          String
  hotelId           String
  roomId            String
  hotelOwnerId      String
  startDate         DateTime
  endDate           DateTime
  breakFastIncluded Boolean
  currency          String
  totalPrice        Int
  paymentStatus     Boolean  @default(false)
  paymentIntentId   String   @unique
  bookedAt          DateTime @default(now())

  Hotel Hotel? @relation(fields: [hotelId], references: [id])
  Room  Room?  @relation(fields: [roomId], references: [id])

  @@index([hotelId])
  @@index([roomId])
}
